{"version":3,"sources":["Components/TabContent.tsx","Components/Tabs.tsx","App.tsx","index.tsx"],"names":["TabContent","tab","className","content","Tabs","tabs","selectedTabId","select","map","type","id","onClick","title","tabsFromServer","App","state","selectedTab","selectTab","setState","this","selected","find","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAMaA,EAA8B,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAC5C,OACE,qBAAKC,UAAU,eAAf,SACGD,EACGA,EAAIE,QACJ,0BCDGC,EAAwB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,OAC3D,OACE,qBAAKL,UAAU,OAAf,SACGG,EAAKG,KAAI,SAACP,GACT,OACE,wBACEQ,KAAK,SACLP,UACEI,IAAkBL,EAAIS,GAClB,oCACA,eAENC,QAAS,WACPJ,EAAON,EAAIS,KARf,SAWGT,EAAIW,cCnBXC,EAAwB,CAC5B,CAAEH,GAAI,QAASE,MAAO,QAAST,QAAS,eACxC,CAAEO,GAAI,QAASE,MAAO,QAAST,QAAS,eACxC,CAAEO,GAAI,QAASE,MAAO,QAAST,QAAS,eACxC,CAAEO,GAAI,QAASE,MAAO,QAAST,QAAS,gBAQ7BW,EAAb,4MACEC,MAAQ,CACNV,KAAMQ,EACNG,YAAaH,EAAe,GAAGH,IAHnC,EAMEO,UAAY,SAACP,GACX,EAAKQ,SAAS,CAAEF,YAAaN,KAPjC,4CAUE,WACE,MAA8BS,KAAKJ,MAA3BV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,YACRI,EAA4Bf,EAAKgB,MAAK,SAAApB,GAAG,OAAIA,EAAIS,KAAOM,KAE9D,OACE,sBAAKd,UAAU,MAAf,UACE,qDAEGkB,EACGA,EAASR,MACT,UAEN,cAAC,EAAD,CAAMP,KAAMA,EAAMC,cAAeU,EAAaT,OAAQY,KAAKF,YAC3D,cAAC,EAAD,CAAYhB,IAAKmB,WAvBzB,GAAyBE,IAAMC,WA6BhBT,IC7CfU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.307ff128.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  tab: Tab | undefined,\n};\n\nexport const TabContent: React.FC<Props> = ({ tab }) => {\n  return (\n    <div className=\"tab__content\">\n      {tab\n        ? tab.content\n        : 'No contend available'}\n    </div>\n  );\n};\n","import React from 'react';\n\ntype SelectTab = (id: string) => void;\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  select: SelectTab,\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTabId, select }) => {\n  return (\n    <div className=\"tabs\">\n      {tabs.map((tab) => {\n        return (\n          <button\n            type=\"button\"\n            className={\n              selectedTabId === tab.id\n                ? 'tabs__button tabs__button--active'\n                : 'tabs__button'\n            }\n            onClick={() => {\n              select(tab.id);\n            }}\n          >\n            {tab.title}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\n\nimport './App.scss';\nimport { TabContent } from './Components/TabContent';\nimport { Tabs } from './Components/Tabs';\n\nconst tabsFromServer: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n  { id: 'tab-4', title: 'Tab 4', content: 'Some text 4' },\n];\n\ntype State = {\n  tabs: Tab[];\n  selectedTab: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    tabs: tabsFromServer,\n    selectedTab: tabsFromServer[0].id,\n  };\n\n  selectTab = (id: string) => {\n    this.setState({ selectedTab: id });\n  };\n\n  render(): React.ReactNode {\n    const { tabs, selectedTab } = this.state;\n    const selected: Tab | undefined = tabs.find(tab => tab.id === selectedTab);\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected tab is&nbsp;\n          {selected\n            ? selected.title\n            : 'None'}\n        </h1>\n        <Tabs tabs={tabs} selectedTabId={selectedTab} select={this.selectTab} />\n        <TabContent tab={selected} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}